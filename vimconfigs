" VUNDLE
" ===================================================================================
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
" GDB VIM
"Plugin 'vim-scripts/Conque-GDB'
" Code Break game :VimGameCodeBreak
Plugin 'johngrib/vim-game-code-break'
"The Nerd Tree
Plugin 'scrooloose/nerdtree'
"Color Solarized
Plugin 'altercation/vim-colors-solarized'
"surround
Plugin 'tpope/vim-surround'
"StatusLine
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" ......................................
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
"============================================================================================
syntax enable
set number
filetype plugin indent on
set mouse=n

"set laststatus=2
let g:airline_theme='luna' "statusline theme

"Ians custom status line
"set statusline=%(Row:%l,Col:%c,Byte:%o%)\ ASCII:%b\ \ %(%4{HasPaste()}%)\ \ %=%t\ \ \ \ %4{strftime(\"%a,\ %b-%d-%Y\")}

"Get rid of Trailing WhiteSpaces with <F5> or automatically
"nnoremap <silent> <F3> :call <SID><StripTrailingWhiteSpaces()<CR>
function! <SID>StripTrailingWhiteSpaces()
"Prep to save last search and cursor position
	let _s= @/
	let l = line(".")
	let c = col(".")
"Do this
	%s/\s\+$//e
"Clean up
	let @/ = _s
	call cursor(l,c)
endfunction

"auto execute when saved ( add file types you want it to work for
if has("autocmd")
	autocmd BufWritePre *.py,*.js,*.c,*.h :call <SID>StripTrailingWhiteSpaces()
endif

"Ians set paste key mapping <F2>
map <F2> :setlocal paste!<cr>
func! HasPaste()
	if &paste
	return 'Paste Mode'
	endif
	return ''
endfunc

"GDB VIM
"let g:ConqueTerm_Color = 2         " 1: strip color after 200 lines, 2: always with color
"let g:ConqueTerm_CloseOnEnd = 1    " close conque when program ends running
"let g:ConqueTerm_StartMessages = 0 " display warning messages if conqueTerm is configured incorrectly  

let mapleader = "y"
noremap <leader>" viw<esc>a"<esc>hbi"<esc>lel
noremap <leader>' viw<esc>a'<esc>hbi'<esc>lel
noremap <leader>* O/*<esc>jo*/<esc>j0
